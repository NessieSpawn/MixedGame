untyped

global function RandomTitanGamemode_Init

const float TTDMIntroLength = 15.0

const array<string> RANDOMGAME_MAP_LIST_TITAN = 
[ 
	"mp_forwardbase_kodai",
	"mp_angel_city",
	"mp_grave",
	"mp_rise",
	"mp_wargames",
	"mp_drydock",
	"mp_eden",
	"mp_glitch",
	"mp_thaw",
	"mp_black_water_canal",
	"mp_relic02",
	"mp_colony02",
	"mp_homestead" 
] // no shitty maps like crashsite3, rise and complex3

const array<string> MODE_LIST_TITAN =
[
	"ttdm",
	"lts",
	"mfd",
	//"ctf_comp", // northstar bugged mode!
	"ctf",
	"cp"
]

struct
{
	string canProgress = ""
	bool allowMelee = true
} file



array<string> exitAllowedMode = [ "ctf", "ctf_comp", "cp", "lts" ] // so player can capture

void function RandomTitanGamemode_Init()
{
	ForcedPlaylist_SetPlaylistTypeOverrides( "Titan" )
	//ClassicMP_ForceDisableEpilogue( true )
	ForcedPlaylist_Disabled( true ) // disable baseForcedPlaylist
	//AddCallback_OnPlayerRespawned( OnPlayerRespawned )
	AddCallback_OnPlayerGetsNewPilotLoadout( OnPlayerChangeLoadout )
	//TrackTitanDamageInPlayerGameStat( PGS_KILLS ) // don't track this god damnit, it has limit
	//SetShouldPlayFactionDialogue( false ) // player faction dialogue
	//SetPlayerRespawnForced( true ) // modified function, force player respawn after they ended killcam or respawn delay!
	//Highlight_SetCustomHighlight( "enemy_player", "enemy_titan", "sp_friendly_hero", "sp_friendly_hero" )
	//Bugged, using SetPlayerRespawnForced() now
	//AddCallback_OnPlayerKilled( OnPlayerKilled )	//should set respawn delay way higher than 10s
	//AddCallback_OnClientConnected( OnClientConnected )
	AddCallback_GameStateEnter( eGameState.Prematch, OnGamePrematch )
	AddCallback_GameStateEnter( eGameState.Playing, OnGameStart )
	AddCallback_GameStateEnter( eGameState.Postmatch, OnGamePostmatch )
	// left a better check in gamestate_mp now
	//AddCallback_GameStateEnter( eGameState.SuddenDeath, OnGameSuddenDeath )

	Riff_ForceSetSpawnAsTitan( eSpawnAsTitan.Always )
	//Bugged, not using right now
	//SetRespawnsEnabled( false )
	if( !exitAllowedMode.contains( GameRules_GetGameMode() ) )
		Riff_ForceTitanExitEnabled( eTitanExitEnabled.Never )
	if( GameRules_GetGameMode() != "lts" )
		ClassicMP_SetCustomIntro( TTDMIntroSetup, TTDMIntroLength ) // shared from _gamemode_ttdm.nut
}

void function OnPlayerRespawned( entity player )
{
	if( !player.IsTitan() && !file.allowMelee )
		player.TakeOffhandWeapon( OFFHAND_MELEE )
}

void function OnPlayerChangeLoadout( entity player , PilotLoadoutDef p)
{
	if( !player.IsTitan() && !file.allowMelee )
		player.TakeOffhandWeapon( OFFHAND_MELEE )
}

void function OnPlayerKilled( entity victim, entity attacker, var damageInfo )
{
	thread OnPlayerKilled_Threaded( victim, attacker, damageInfo )
}

void function OnPlayerKilled_Threaded( entity victim, entity attacker, var damageInfo )
{
	if( !GamePlaying() )
		return
	if( GameRules_GetGameMode() == "lts" )
		return
	victim.EndSignal( "OnDestroy" )
	victim.EndSignal( "PlayerRespawnStarted" )
	//entity spawnPoint = FindSpawnPoint( victim, victim.IsTitan(), false )
	wait 10
	if ( !victim.isSpawning && IsValid( victim ) && GamePlaying() )
		thread RespawnAsTitan( victim )
}

void function OnClientConnected( entity player )
{
	if( !GamePlaying() )
		return
	if( GameRules_GetGameMode() == "lts" )
		return
	thread RespawnAsTitan( player )
}

void function OnGamePrematch()
{
	thread OnGamePrematch_Threaded()
}

void function OnGamePrematch_Threaded()
{
	wait 5
	if( GameRules_GetGameMode() == "lts" )
	{
		if( GetPlayerArray().len() < 4 )
		{
			file.canProgress = "人數不足，無法進行該模式"
			thread MapandModeChange()
		}
	}
}

void function OnGameStart()
{
	SetPlayerDeathsHidden( true ) // let's not count player's deaths!
}

void function OnGamePostmatch()
{
	thread MapandModeChange()
}

void function OnGameSuddenDeath()
{
	if( GetPlayerArray().len() < 2 )
	{
		file.canProgress = "人數不足，無法進行該階段"
		thread MapandModeChange()
	}
}

void function MapandModeChange()
{
	int mapIndex = RANDOMGAME_MAP_LIST_TITAN.find( GetMapName() )
	mapIndex += 1 // next mode index
	if( mapIndex == RANDOMGAME_MAP_LIST_TITAN.len() ) // reached last map?
		mapIndex = 0
	string map = RANDOMGAME_MAP_LIST_TITAN[mapIndex]
	string mapname = ForcedPlaylist_GetNextMapName( map )

	int modeIndex = MODE_LIST_TITAN.find( GAMETYPE )
	modeIndex += 1 // next mode index
	if( modeIndex == MODE_LIST_TITAN.len() ) // reached last mode?
		modeIndex = 0
		
	string mode = MODE_LIST_TITAN[modeIndex]
	string modename = GetNextModeName( mode )

	foreach( entity player in GetPlayerArray() )
		SendHudMessage(player, file.canProgress + "\n下一輪模式為：" + modename + "\n下一張地圖為：" + mapname,  -1, 0.4, 255, 255, 255, 0, 0.15, 7, 1);
	wait 5
	GameRules_ChangeMap( map, mode )

	//Invalid if used outside of 'mp_lobby'
	//SetPlaylistVarOverride( "max_players", GetCurrentPlaylistVarString( "max_players", "16" ) )

}

string function GetNextModeName( string mode )
{
	switch( mode )
	{
		case "aitdm":
			return "消耗戰"
		case "cp":
			return "强化據點"
		case "ctf_comp":
			return "競技奪旗"
		case "ctf":
			return "奪旗"
		case "mfd":
			return "獵殺標記"
		case "lts":
			return "泰坦殊死戰"
		case "ttdm":
			return "泰坦爭鬥"
		case "at":
			return "賞金追緝"
		case "tdm":
			return "采集機攻防"
		default:
			return "未知模式"
	}
	return "未知模式"
}