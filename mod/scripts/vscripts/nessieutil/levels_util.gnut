global function Nessie_Levels_Utility_Init

// defined for wargames, since level scripts won't be loaded unless we entering specific map
// we disable player dissolving so we can make custom death effects etc.
global function Wargames_SetPlayerDissolveDisabled
global function Wargames_IsPlayerDissolveDisabled // to be shared with wargames level script

// allow player earn assist score from npc kills and such
global function Levels_SetNPCAssistScoreEnabled
global function Levels_IsNPCAssistScoreEnabled

global function Levels_GetAllVulnerableEntityClasses // all entity classes those can be damaged
global function Levels_GetValidCombatCharacterClasses // all npc/player classes

global function Levels_GetNPCScoreEventNameFromClassName // basically same as ScoreEventForNPCKilled() in sh_score.gnut, but removed entity specific checks

// hardcoded array for us get all entity classes those can be damaged
const array<string> VULNERABLE_ENTITY_CLASSNAMES =
[
    // player
    "player",
    "player_decoy",

    // npc
    "npc_soldier",
    "npc_marvin",
    "npc_spectre",
    "npc_stalker",
    "npc_super_spectre",
    "npc_frag_drone",
    "npc_titan",
    "npc_turret_sentry",
    "npc_turret_mega",
    "npc_pilot_elite",
    "npc_gunship",

    // projectile
    "grenade",
    "crossbow_bolt",
    "rpg_missile",

    // props
    "prop_dynamic",
    "prop_dynamic_lightweight",
    "prop_physics",
    "prop_script",
    "script_mover",
    "script_mover_lightweight",
]

// hardcoded array for us get valid player/npc classes
const array<string> COMBAT_CHARACTER_CLASSNAMES =
[
    // player
    "player",

    // npc
    "npc_soldier",
    "npc_marvin",
    "npc_spectre",
    "npc_stalker",
    "npc_super_spectre",
    "npc_frag_drone",
    "npc_titan",
    "npc_turret_sentry",
    "npc_turret_mega",
    "npc_pilot_elite",
    "npc_gunship",
]

struct
{
    bool playerDissolveDisabled = false
    bool npcAssistScoreEnabled = false
} file

void function Nessie_Levels_Utility_Init()
{
    ServerCommand( "script_server_fps 60" ) // function WaitFrame() has been changed, modifying script_server_fps won't break game behavior

    // fake score event for players
	AddCallback_OnNPCKilled( PlayerAssistScoreEventForNPCKilled )
}

void function PlayerAssistScoreEventForNPCKilled( entity victim, entity attacker, var damageInfo )
{
    // settings check
    if ( !Levels_IsNPCAssistScoreEnabled() )
        return

    // only fix score for non-player attackers
    if ( attacker.IsPlayer() )
        return

    // shared check from modified _score.nut, allow us turn off score event from killing certain entity
	if ( ScoreEvent_IsDisabledForEntity( victim ) )
		return
    
    // fake assist score here so players don't complain
    if ( victim.IsTitan() )
    {
        // titan damage history stores in titanSoul, but if they killed by termination it's gonna transfer to victim themselves
        bool killedByTermination = DamageInfo_GetDamageSourceIdentifier( damageInfo ) == eDamageSourceId.titan_execution
        entity damageHistorySaver = killedByTermination ? victim : victim.GetTitanSoul()
        if ( IsValid( damageHistorySaver ) )
        {
            // shared from _score.nut
            ScoreEvent_PlayerAssist( damageHistorySaver, attacker, "TitanAssist" )
        }
    }
}

void function Wargames_SetPlayerDissolveDisabled( bool disabled )
{
	file.playerDissolveDisabled = disabled
}

bool function Wargames_IsPlayerDissolveDisabled()
{
    return file.playerDissolveDisabled
}

void function Levels_SetNPCAssistScoreEnabled( bool enabled )
{
    file.npcAssistScoreEnabled = enabled
}

bool function Levels_IsNPCAssistScoreEnabled()
{
    return file.npcAssistScoreEnabled
}

array<string> function Levels_GetAllVulnerableEntityClasses()
{
    return VULNERABLE_ENTITY_CLASSNAMES
}

array<string> function Levels_GetValidCombatCharacterClasses()
{
    return COMBAT_CHARACTER_CLASSNAMES
}

// basically same as ScoreEventForNPCKilled() in sh_score.gnut, but removed entity specific checks
string function Levels_GetNPCScoreEventNameFromClassName( string classname )
{
    switch ( classname )
	{
        case "npc_soldier":
            return "KillGrunt"

		case "npc_titan":
			return "KillNPCTitan"

		case "npc_super_spectre":
			return "KillSuperSpectre"

		case "npc_prowler":
			return "KillProwler"

		case "npc_drone":
			return "KillDrone"

		case "npc_turret_mega":
			return "KillHeavyTurret"

		case "npc_turret_sentry":
			return "KillLightTurret"

		case "npc_stalker":
			return "KillStalker"

		case "npc_spectre":
			return "KillSpectre"
	}

    return ""
}