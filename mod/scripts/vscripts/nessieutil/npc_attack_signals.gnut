untyped // for us appending table into signals
global function NPC_WeaponAttackSignals_Init

// shared function to be in all OnWeaponNpcPrimaryAttack callbacks
global function NPCPrimaryAttackSignal

void function NPC_WeaponAttackSignals_Init()
{
    foreach ( string className in Levels_GetValidCombatCharacterClasses() )
        AddDamageByCallback( className, OnNPCMeleeDamageTarget )
}

// manually send some signals if npc is firing a weapon or something...
// temp left it unused, huge deal to add into every callbacks
// and without signals titanability_mobile_dome_shield can work better
void function NPCPrimaryAttackSignal( entity npc, entity weapon )
{
    /*
        table:
            self: owner entity
            activator: weapon entity
    */
    table attackSignal
    attackSignal.self <- npc
    attackSignal.activator <- weapon
    npc.Signal( "OnPrimaryAttack", attackSignal )
}

// we can't get npc's melee sequence
// so we signal melee when their attack hits target
void function OnNPCMeleeDamageTarget( entity ent, var damageInfo )
{
    entity attacker = DamageInfo_GetAttacker( damageInfo )
    if ( !IsValid( attacker ) || !attacker.IsNPC() )
        return

    if ( DamageInfo_GetCustomDamageType( damageInfo ) & DF_MELEE )
        attacker.Signal( "OnMelee" ) // signal defined in modified sh_melee.gnut...
}