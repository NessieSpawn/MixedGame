// this is to fix respawn's weird client-side crash
// use in-file shield value for non-titan heavy armor target
// needs to replace all GetShieldHealth(), SetShieldHealth(), GetShieldHealthMax() and SetShieldHealthMax() function with functions in this file

global function Nessie_Shield_Crash_Fix_Init

global function SetShieldHealthWithFix
global function GetShieldHealthWithFix
global function SetShieldHealthMaxWithFix
global function GetShieldHealthMaxWithFix

// main functioning array
const array<string> USE_SCRIPTED_SHIELD_CLASSES =
[
    "npc_super_spectre",    // currently, reapers are only non-titan unit who uses weakpoint
]

struct
{
    table<entity, int> entMaxShieldValue
    table<entity, int> entShieldValue
} file

void function Nessie_Shield_Crash_Fix_Init()
{

}

void function InitFileShieldValue( entity ent )
{
    if ( !EntCanHaveShield( ent ) )
    {
        if ( !( ent in file.entShieldValue ) )
        {
            file.entMaxShieldValue[ ent ] <- 0
            file.entShieldValue[ ent ] <- 0
        }
    }
}

// for non-titan heavy armor unit, use scripted shield health
bool function EntCanHaveShield( entity ent )
{
    string className = ent.GetClassName()
    if ( USE_SCRIPTED_SHIELD_CLASSES.contains( className ) )
        return false

    return true
}

void function SetShieldHealthWithFix( entity ent, int targetShield )
{
    InitFileShieldValue( ent )

    if ( !EntCanHaveShield( ent ) ) // update scripted shield health if ent is non-titan heavy armor unit
        file.entShieldValue[ ent ] = targetShield
    else // otherwise we use vanilla behavior
        ent.SetShieldHealth( targetShield )
}

int function GetShieldHealthWithFix( entity ent )
{
    InitFileShieldValue( ent )

    if ( !EntCanHaveShield( ent ) ) // update scripted shield health if ent is non-titan heavy armor unit
        return file.entShieldValue[ ent ]
  
    return GetShieldHealthWithFix( ent )
}

void function SetShieldHealthMaxWithFix( entity ent, int targetMaxShield )
{
    InitFileShieldValue( ent )

    if ( !EntCanHaveShield( ent ) ) // update scripted shield health if ent is non-titan heavy armor unit
        file.entMaxShieldValue[ ent ] = targetMaxShield
    else // otherwise we use vanilla behavior
        ent.SetShieldHealthMax( targetMaxShield )
}

int function GetShieldHealthWithFix( entity ent )
{
    InitFileShieldValue( ent )

    if ( !EntCanHaveShield( ent ) ) // update scripted shield health if ent is non-titan heavy armor unit
        return file.entMaxShieldValue[ ent ]
  
    return GetShieldHealthMaxWithFix( ent )
}