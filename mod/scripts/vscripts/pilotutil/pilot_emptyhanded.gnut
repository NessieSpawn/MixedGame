global function Pilot_EmptyHanded_Init

const string EMPTY_HANDED_MOD_NAME = "pilot_emptyhanded"
const string EMPTY_HANDED_BOOST_MOD_NAME = "pilot_emptyhanded_boost"
const float DEFAULT_SPRINT_SPEED = 260.0 // this can't be get through getSettingsField()! so it's current hardcoded

void function Pilot_EmptyHanded_Init()
{
    AddSpawnCallback( "player", OnPlayerEntitySpawned )
}

void function OnPlayerEntitySpawned( entity player )
{
    thread CheckEmptyHandedModLifetime( player )
}

void function CheckEmptyHandedModLifetime( entity player )
{
    player.EndSignal( "OnDestroy" )

    while ( true )
    {
        WaitFrame( true ) // bypass script fps limit for better visual
        
        if ( !IsAlive( player ) ) 
            continue
        if ( player.IsTitan() )
            continue
        entity activeWeapon = player.GetActiveWeapon()
        if ( !IsValid( activeWeapon ) )
            continue
        array<string> mods = activeWeapon.GetMods()
        bool isEmptyHandMod = mods.contains( EMPTY_HANDED_MOD_NAME )
        bool isEmptyHandBoostMod = mods.contains( EMPTY_HANDED_BOOST_MOD_NAME )
        if ( !isEmptyHandMod && !isEmptyHandBoostMod )
            continue
        vector velocity = player.GetVelocity()
        //float sprintSpeed = float( player.GetPlayerSettingsField( "sprintspeed" ) ) // speed higher than this will trigger default animations
        float speedVal = sqrt( velocity.x * velocity.x + velocity.y * velocity.y )
        //print( speedVal )
        // better to use a onehanded modifier while speed is enough to change animation or off ground
        if ( ( ( speedVal > ( DEFAULT_SPRINT_SPEED + 5 ) || !player.IsOnGround() ) || player.IsSliding() ) && isEmptyHandMod )
        {
            activeWeapon.RemoveMod( EMPTY_HANDED_MOD_NAME )
            activeWeapon.AddMod( EMPTY_HANDED_BOOST_MOD_NAME )
        }
        else if ( ( ( speedVal <= DEFAULT_SPRINT_SPEED && player.IsOnGround() ) && !player.IsSliding() ) && isEmptyHandBoostMod )
        {
            activeWeapon.RemoveMod( EMPTY_HANDED_BOOST_MOD_NAME )
            activeWeapon.AddMod( EMPTY_HANDED_MOD_NAME )
        }

    }
}