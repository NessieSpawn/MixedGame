global function Pilot_CrouchWalk_Init

const float RAVENANT_CROUCH_BOOST_SEVERITY = 0.6 // this is 176.0 (0.58 is 172.24), walk speed 173.50
const float GRUNT_CROUCH_BOOST_SEVERITY = 0.6 // this is 176.0 (0.58 is 172.24), walk speed 173.50
const float RAVENANT_CROUCH_BOOST_SEVERITY_COLISEUN = 0.05 // the posesmod "coliseum" has 160 crouchwalk speed. 0.05 boosts it to 175.06
const float GRUNT_CROUCH_BOOST_SEVERITY_COLISEUN = 0.05 // the posesmod "coliseum" has 160 crouchwalk speed. 0.05 boosts it to 175.06

void function Pilot_CrouchWalk_Init()
{
    // function WaitFrame() has been changed, modifying script_server_fps won't break game behavior
    RegisterSignal( "PilotCrouchWalkThink" )
    // ttf2 don't have other ways to modify classmods other than change class, so this is enough
    AddCallback_PlayerClassChanged( OnPlayerClassChanged )
}

void function OnPlayerClassChanged( entity player )
{
    thread PilotCrouchWalkThink( player )
}

void function PilotCrouchWalkThink( entity player )
{
    // only run for living players( dead players will also change class to "spectator", prevent it )
	if ( !IsAlive( player ) )
		return

	player.EndSignal( "OnDestroy" )
	player.EndSignal( "OnDeath" )
	player.Signal( "PilotCrouchWalkThink" )
	player.EndSignal( "PilotCrouchWalkThink" )

	// check wallclimb mod, ttf2 don't have other ways to modify classmods than change class so this is enough
	bool hasCrouchBoost = false
    float boostSeverity
	array<string> classMods = player.GetPlayerSettingsMods()
    
    // ravenant crouch and gruntmode crouch boost
	if ( classMods.contains( "ravenant_ability" ) || classMods.contains( "courch_walk_boost" ) ) 
		hasCrouchBoost = true

    if ( !hasCrouchBoost )
        return

    int loopCount = 0 // debug only
    array<int> crouchBoostHandles // why we have to handle like this...
    bool crouchBoostAdded = false // the only way to fix this... idk why handle not accurate in some case
    
    // to fix issues with gruntmode wallclimb, always clear boost handle on class change
    OnThreadEnd
    (
        function(): ( player, crouchBoostHandles )
        {
            if ( IsValid( player ) )
            {
                foreach ( int handle in crouchBoostHandles )
                {
                    //print( "removing handle: " + string( handle ) )
                    StatusEffect_Stop( player, handle )
                }
            }
        }
    )
    
    while ( true )
    {
        WaitFrame( true ) // always wait first, this ignores fps limit

        // posmods might change midway, have to check them here
        bool hasColiseumMod = player.GetPlayerModsForPos( PLAYERPOSE_CROUCHING ).contains( "coliseum" )
	    //print( "hasColiseumMod: " + string( hasColiseumMod ) )
        // ravenant crouch
        if ( classMods.contains( "ravenant_ability" ) ) 
        {
            boostSeverity = RAVENANT_CROUCH_BOOST_SEVERITY
            if ( hasColiseumMod )
                boostSeverity = RAVENANT_CROUCH_BOOST_SEVERITY_COLISEUN
        }
        // gruntmode crouch boost
        if ( classMods.contains( "courch_walk_boost" ) )
        {
            boostSeverity = GRUNT_CROUCH_BOOST_SEVERITY
            if ( hasColiseumMod )
                boostSeverity = GRUNT_CROUCH_BOOST_SEVERITY_COLISEUN
        }

        // skip check and stop existing speedboost if we've off ground
        if ( !player.IsOnGround() || player.IsWallRunning() || player.IsTraversing() || player.Anim_IsActive() || IsValid( player.GetParent() ) )
        {
            foreach ( _index, int handle in crouchBoostHandles )
            {
                //print( "removing handle: " + string( handle ) )
                StatusEffect_Stop( player, handle )
                crouchBoostHandles.remove( _index )
            }
            crouchBoostAdded = false
            continue
        }

        if ( player.IsCrouched() ) // completely crouched, don't have to check sliding since slide in ttf2 not affected by speed_boost
        {
            if ( !crouchBoostAdded )
            {
                // try to stop last crouch boost...?
                foreach ( _index, int handle in crouchBoostHandles )
                {
                    //print( "removing handle: " + string( handle ) )
                    StatusEffect_Stop( player, handle )
                    crouchBoostHandles.remove( _index )
                }
                if ( crouchBoostHandles.len() == 0 )
                {
                    int newHandle = StatusEffect_AddEndless( player, eStatusEffect.speed_boost, boostSeverity )
                   // print( "created handle: " + string( newHandle ) )
                    //print( "loopCount: " + string( loopCount ) )
                    crouchBoostHandles.append( newHandle )
                }
                crouchBoostAdded = true
            }
        }
        else // not crouched
        {
            if ( crouchBoostAdded )
            {
                foreach ( _index, int handle in crouchBoostHandles )
                {
                    //print( "removing handle: " + string( handle ) )
                    StatusEffect_Stop( player, handle )
                    crouchBoostHandles.remove( _index )
                }
                crouchBoostAdded = false
            }
        }
        loopCount++
    }
}