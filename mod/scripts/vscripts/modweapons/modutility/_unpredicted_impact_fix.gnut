// This file is for fix unpredicted modded weapon visual effect
// mostly for explosion effects, also provides some utility stuffs
global function UnPredictedWeaponImpactFix_Init

global function FixImpactEffectForProjectileAtPosition
global function GetImpactTableNameFromWeaponOrProjectile


void function UnPredictedWeaponImpactFix_Init()
{

}

// return true if effect succesfully dispatched
bool function FixImpactEffectForProjectileAtPosition( entity projectile, vector pos )
{
    // only do fix if projectile is in prediction
    // npc fired projectile never needs prediction
    entity owner = projectile.GetOwner()
    if ( !IsValid( owner ) || !owner.IsPlayer() )
        return
    // this can be bad for some effect that won't dispatch effect on victim player's face
    // also bad if projectile modified their impact table index midway
    // but whatever
    float creationTime = projectile.GetProjectileCreationTime()
    float maxFixTime = creationTime + 0.4 // hope this will pretty much fix client visual
    if ( Time() > maxFixTime )
        return false

    string impactFX = GetImpactTableNameFromWeaponOrProjectile( projectile )
    if ( impactFX == "" )
        return false

    // SF_ENVEXPLOSION_INCLUDE_ENTITIES prevents bad airburst effects
    PlayImpactFXTable( pos, projectile, impactFX, SF_ENVEXPLOSION_INCLUDE_ENTITIES )

    return true
}

string function GetImpactTableNameFromWeaponOrProjectile( entity weaponOrProjectile )
{
    asset impactEffect
    // cast asset into string by removing first $ character
    if ( weaponOrProjectile.IsProjectile() )
        impactEffect = weaponOrProjectile.GetProjectileWeaponSettingAsset( eWeaponVar.impact_effect_table )
    else
        impactEffect = weaponOrProjectile.GetWeaponSettingAsset( eWeaponVar.impact_effect_table )

    if ( impactEffect == $"" )
        return ""
    
    string tempString = string( impactEffect )
    string impactFXName = tempString.slice( 2, tempString.len() - 1 )

    return impactFXName
}